name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-and-release:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
        exclude:
          - goos: windows
            goarch: arm64
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.24.x'

      - name: Build ${{ matrix.goos }}-${{ matrix.goarch }}
        env:
          CGO_ENABLED: 0
          GOOS: ${{ matrix.goos }}
          GOARCH: ${{ matrix.goarch }}
        run: |
          mkdir -p dist
          BIN=api
          EXT=""
          if [ "$GOOS" = "windows" ]; then EXT=.exe; fi
          OUT="dist/${BIN}_${GOOS}_${GOARCH}${EXT}"
          echo "Building $OUT"
          go build -trimpath -ldflags "-s -w" -o "$OUT" ./cmd/api
          # Package
          if [ "$GOOS" = "windows" ]; then
            (cd dist && zip -q "${BIN}_${GOOS}_${GOARCH}.zip" "${BIN}_${GOOS}_${GOARCH}${EXT}")
            rm -f "$OUT"
          else
            tar -C dist -czf "dist/${BIN}_${GOOS}_${GOARCH}.tar.gz" "${BIN}_${GOOS}_${GOARCH}${EXT}"
            rm -f "$OUT"
          fi

      - name: Extract release notes from CHANGELOG
        id: notes
        shell: bash
        run: |
          ver="${GITHUB_REF_NAME#v}"
          if [ -f CHANGELOG.md ]; then
            awk -v ver="$ver" '
              BEGIN { in=0 }
              /^## \[/ {
                if (in==1) exit 0
                if ($0 ~ "\\[" ver "\\]") { in=1; next }
              }
              in==1 { print }
            ' CHANGELOG.md > RELEASE_NOTES.md || true
          fi
          if [ ! -s RELEASE_NOTES.md ]; then
            echo "No changelog section found for $ver; using default body" > RELEASE_NOTES.md
          fi

      - name: Upload release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: ${{ github.ref_name }}
          name: ${{ github.ref_name }}
          body_path: RELEASE_NOTES.md
          files: |
            dist/*.tar.gz
            dist/*.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
